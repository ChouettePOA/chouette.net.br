
<script webc:keep src="/js/svg.min.js"></script>

<script>
	SVG.registerWindow(window, document);

	// console.log('uid');
	// console.log(uid);
	// const draw = SVG().addTo('#' + uid).size('100%', '100%');
	const test_id = 'test';

	const draw = SVG().addTo('#test-deco-vine').size('100%', '100%');

	// Function to generate a vine-like structure
	function createVine(x, y, length, angle, depth) {
			if (depth === 0) return;

			const radian = (angle * Math.PI) / 180;
			const x2 = x + length * Math.cos(radian);
			const y2 = y + length * Math.sin(radian);

			// draw.line(x, y, x2, y2).stroke({ width: 2, color: '#000' });
			draw.line(x, y, x2, y2).stroke({ width: depth, color: '#000' });

			const newLength = length * 0.75;
			const newDepth = depth - 1;

			createVine(x2, y2, newLength, angle - 30, newDepth);
			createVine(x2, y2, newLength, angle + 30, newDepth);
	}

	// Initial vine parameters
	const startX = 200;
	const startY = 300;
	const initialLength = 100;
	const initialAngle = -90; // Straight up
	const depth = 5;

	// Create the vine
	createVine(startX, startY, initialLength, initialAngle, depth);
</script>

<deco-vine class="DecoVine" webc:root>
	<!--- <div :id="uid"></div> --->
	<div class="DecoVine-graphics" id="test-deco-vine"></div>
	<div class="DecoVine-content">
		<slot></slot>
	</div>
</deco-vine>

<style>
	.DecoVine {
		display: block;
		position: relative;
	}
	.DecoVine-graphics {
		position: absolute;
		top: 0;
		z-index: 1;
		width: 100%;
	}
	.DecoVine-graphics > svg {
		height: 400px;
	}
	.DecoVine-content {
		position: relative;
		z-index: 2;
	}
</style>
