/**
 * @file
 * chouette.net.br critical CSS.
 *
 * Based on HTML5 Boilerplate v9.0.0-RC1 | MIT License
 * @link https://html5boilerplate.com/
 */

* {
	box-sizing: border-box;
}

:root {
	@utopia typeScale({
		minWidth: 320,
		maxWidth: 1240,
		minFontSize: 18,
		maxFontSize: 22,
		minTypeScale: 1.2,
		maxTypeScale: 1.25,
		positiveSteps: 5,
		negativeSteps: 1,
		prefix: "size",
	});
	/* @utopia spaceScale({
		minWidth: 320,
		maxWidth: 1240,
		minSize: 18,
		maxSize: 22,
		positiveSteps: [1.5, 2, 3],
		negativeSteps: [0.75, 0.5],
		customSizes: ['s-l'],
	}); */
}

html {
	position: relative;
	scroll-behavior: smooth;
	background-color: #004281;
	color: #FFF;
	font-family: 'Quattrocento Sans', sans-serif;
	font-weight: 400;
	font-size: var(--size-0);
	line-height: utopia.clamp(21, 23);
}

html,
body {
	margin: 0;
	padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
	vertical-align: middle;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.visually-hidden {
	border: 0;
	clip: rect(0, 0, 0, 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	white-space: nowrap;
	width: 1px;
	/* 1 */
}


/*
	Base : Images.
*/

img {
	max-width: 100%;
	height: auto;
}

h1,
h2,
h3,
h4 {
	margin: 0;
	font-family: Raleway, sans-serif;
	line-height: 1.1;
}


/*
	Utility : typography-related utilities.
*/

.u-text-block {
	max-width: 80ch;
}
.u-text-block > *:first-child {
	margin-top: 0;
}
.u-text-block > *:last-child {
	margin-bottom: 0;
}


/*
	Utility : u-container.

	Le inner-wrapper centré, max 1440px de large, avec un padding-left générique.
	On utilise un inner-wrapper afin que le padding soit fluide (car avec le
	box-sizing: border-box on peut pas le faire en % sur le même element).
*/

.u-container {
	margin: 0 auto;
	max-width: 90rem; /* 1440px */
}
.u-container-inner {
	padding-left: 6.666%;
	padding-right: 6.666%;
}


/*
	Utility : u-vspacer.

	L'espace à la fin et entre les sections adjacentes doit être uniforme.
*/

.u-vspacer {
	padding-bottom: var(--size-0);
}
.u-vspacer + .u-vspacer {
	padding-top: var(--size-0);
}
.u-vspacer + .u-vspacer .u-container-inner > :first-child {
	margin-top: 0;
}
/*
@media only screen and (min-width: 35em) {
	.u-vspacer {
		padding-bottom: 2.5rem;
	}
	.u-vspacer + .u-vspacer {
		padding-top: 2.5rem;
	}
}
*/


/*
	Scope : s-invert.

	Les couleurs sont inversées dans cette zone :
		- (fond foncé, texte clair).
*/

.s-invert {
	background-color: #FFF;
}
.s-invert,
.s-invert * {
	color: #222;
}


/*
	Component : Top logo.
*/

.Logo {
	margin: 0 auto;
}


/*
	Component : BgTexture.
*/

.BgTexture {
	width: 100%;
	background-size: cover;
	background-image: url('/img/bg-paper-texture-01.webp');
	background-position: 50%;
}
