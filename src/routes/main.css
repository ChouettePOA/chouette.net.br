/**
 * @file
 * chouette.net.br main CSS.
 *
 * Used for :
 *   - minimal CSS reset,
 *   - shared constants (e.g. font-size / spacing values, colors, etc),
 *   - styling base, raw tags,
 *   - generic utilities,
 *   - and any styles which need to be inherited.
 *
 * Based on HTML5 Boilerplate v9.0.0-RC1 | MIT License
 * @link https://html5boilerplate.com/
 *
 * Uses the "Utopia" fluid responsive design utility.
 * @link https://utopia.fyi/blog/postcss-utopia/
 */

* {
	box-sizing: border-box;
}

:root {
	/*
		Common spacing and typographic constants.
	*/
	--line-height: utopia.clamp(21, 23);
	--sans-serif: BlinkMacSystemFont,-apple-system,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;

	@utopia typeScale({
		minWidth: 320,
		maxWidth: 1240,
		minFontSize: 18,
		maxFontSize: 22,
		minTypeScale: 1.2,
		maxTypeScale: 1.25,
		positiveSteps: 5,
		negativeSteps: 1,
		prefix: "size",
	});

	@utopia spaceScale({
		minWidth: 320,
		maxWidth: 1240,
		minSize: 18,
		maxSize: 22,
		positiveSteps: [1.5, 2, 3],
		negativeSteps: [0.75, 0.5],
		customSizes: ['s-l'],
	});

	/*
		Measures.
	*/
	--line-length: 36rem;
	--max-length: calc(var(--line-length) * 2 + var(--space-m));

	/*
		Z-index.
	*/
	--z-index-offcanvas: 16;
	--z-index-overlay: 8;
	--z-index-menu: 4;
	--z-index-over: 2;
	--z-index-std: 1;

	/*
		Color values.
	*/
	--color-1: #004281;
	--color-2: #f25921;
	--color-3: #d71920;
	--color-4: #0084FF;
	--color-5: #FFB969;
	--color-6: #1CB841;
	--color-7: #CA3C3C;
	--color-8: #0078e7;

	--color-grey-1: #151515;
	--color-grey-2: #DDD;
	--color-grey-3: #292929;
	--color-grey-4: #1c1c1c;
	--color-grey-5: #717171;

	--color-grey-t-1: rgba(28, 28, 28, .88);
	--color-grey-t-2: rgba(41, 41, 41, .88);
	--color-grey-t-3: rgba(75, 75, 75, .88);

	--color-black-t-1: rgba(0, 0, 0, .5);
	--color-black-t-2: rgba(0, 0, 0, .8);
	--color-black-t-3: rgba(0, 0, 0, .05);
	--color-black-t-4: rgba(0, 0, 0, .2);

	--color-white-t-1: rgba(255, 255, 255, .5);
	--color-white-t-2: rgba(255, 255, 255, .1);
	--color-white-t-3: rgba(255, 255, 255, .9);

	/*
		Color usage.
	*/
	--blue: var(--color-1);
	--orange: var(--color-2);
	--red: var(--color-3);
	--blue-light: var(--color-4);
	--yellow: var(--color-5);
	--green: var(--color-6);
	--grey-dark: var(--color-grey-1);

	--base-bg-color: var(--blue);
	--base-text-color: white;

	--inverted-bg-color: white;
	--inverted-text-color: var(--grey-dark);

	--overlay-white-bg-color: var(--color-white-t-3);
}

html {
	position: relative;
	scroll-behavior: smooth;
	background-color: var(--base-bg-color);
	color: var(--base-text-color);
	font-family: 'Quattrocento Sans', var(--sans-serif, sans-serif);
	font-weight: 400;
	font-size: var(--size-0);
	line-height: utopia.clamp(21, 23);
}

html,
body {
	margin: 0;
	padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
	vertical-align: middle;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.visually-hidden {
	border: 0;
	clip: rect(0, 0, 0, 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	white-space: nowrap;
	width: 1px;
	/* 1 */
}


/*
	Base : Images.
*/

img {
	max-width: 100%;
	height: auto;
}


/*
	Base : Headings / titles.
*/

h1,
h2,
h3,
h4 {
	font-family: Raleway, sans-serif;
	line-height: 1.1;
}

h1 {
	font-size: var(--size-4);
	font-weight: 200;
}

h2 {
	font-weight: 400;
	/* text-transform: uppercase; */
	/* letter-spacing: .1em; */
	font-feature-settings: "c2sc";
	font-variant: small-caps;
	letter-spacing: .05em;
}


/*
	Base : links.
*/

a {
	border-bottom: 1px solid currentColor;
	text-decoration: none;
	color: inherit;
	transition: color .3s;
}
a:hover,
a:focus {
	color: #f25921;
}


/*
	Base : typographic separators.
*/

hr {
	border: 0;
	height: 1px;
	background-image: linear-gradient(90deg, hsla(0,0%,100%,0), hsla(0,0%,100%,.75), hsla(0,0%,100%,0));
}


/*
	Base : vertical rhythm.
*/

h1,
h2,
h3,
h4,
hr,
p,
blockquote,
.s-rich-text ul,
.s-rich-text ol {
	margin: 0 0 var(--size-0) 0;
}
p:last-child,
blockquote:last-child,
.s-rich-text ul:last-child,
.s-rich-text ol:last-child {
	margin-bottom: 0;
}


/*
	Base : selected text.
*/

::selection {
	background-color: var(--inverted-bg-color);
	color: var(--inverted-text-color);
	text-shadow: none;
}


/*
	Utility : u-container.

	Le inner-wrapper centré, max 1440px de large, avec un padding-left générique.
	On utilise un inner-wrapper afin que le padding soit fluide (car avec le
	box-sizing: border-box on peut pas le faire en % sur le même element).
*/

.u-container {
	padding-left: var(--space-m);
	padding-right: var(--space-m);
}
.u-container-inner {
	margin: 0 auto;
	max-width: var(--line-length);
}
.u-container-inner > .s-rich-text:first-child {
	padding-top: var(--space-m);
}


/*
	Utility : u-vspacer.

	L'espace à la fin et entre les sections adjacentes doit être uniforme.
*/

.u-vspacer {
	padding-bottom: var(--space-m);
}
.u-vspacer + .u-vspacer {
	padding-top: var(--space-m);
}
.u-vspacer + .u-vspacer .u-container-inner > :first-child {
	margin-top: 0;
}
/*
@media only screen and (min-width: 35em) {
	.u-vspacer {
		padding-bottom: 2.5rem;
	}
	.u-vspacer + .u-vspacer {
		padding-top: 2.5rem;
	}
}
*/


/*
	Scope : s-invert.

	Les couleurs sont inversées dans cette zone :
		- (fond foncé, texte clair).
*/

.s-invert {
	background-color: var(--inverted-bg-color);
}
.s-invert,
.s-invert * {
	color: var(--inverted-text-color);
}
.s-invert h2,
.s-invert h3,
.s-invert h4 {
	color: var(--blue);
}
.s-invert ::selection {
	background-color: var(--base-bg-color);
	color: var(--base-text-color);
}


/*
	Scope : s-rich-text.
*/

.s-rich-text > p {
	margin-right: auto;
	margin-left: auto;
	max-width: var(--line-length);
}


/*
	Component : Top logo.
*/

.Logo {
	margin: 0 auto;
}


/*
	Component : BgTexture.
*/

/* .BgTexture {
	width: 100%;
	background-size: cover;
	background-image: url('/img/bg-paper-texture-01.webp');
	background-position: 50%;
} */


/*
	Rich text scope.
*/

.s-rich-text ul,
.s-rich-text ol {
	padding: 0 0 0 var(--size-0);
}
.s-rich-text li + li {
	margin-top: .2rem;
}


/*
	Lists.

	Override :
	.s-rich-text ul, .s-rich-text ol
*/

.EmojiList.EmojiList.EmojiList {
	padding-left: var(--size-2);
	list-style: none;
}
.EmojiList > li {
	position: relative;
}
.EmojiList > li::before {
	content: attr(data-emoji);
	position: absolute;
	top: .05em; /* Because it visually appears a bit off-centered */
	left: calc(var(--size-2) * -1);
}


/*
	Quotes.
*/

blockquote {
	border-left: .1rem solid #FFF;
	padding-left: var(--size-0);
}
.s-invert blockquote {
	border-color: var(--blue);
}


/*
	All page contents are positionned relatively to this wrapper (useful for cases
	where we use the preview-frame).
*/

#page {
	position: relative;
}
